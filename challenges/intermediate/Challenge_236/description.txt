https://www.reddit.com/r/dailyprogrammer/comments/3opin7/20151014_challenge_236_intermediate_fibonacciish/
# Description

[The Fibonacci
Sequence](https://en.wikipedia.org/wiki/Fibonacci_number)
is a famous integer series in the field of mathematics.
The sequence is recursively defined for n > 1 by the
formula _f(n) = f(n-1) + f(n-2)_. In plain english,
each term in the sequence is found by adding the
previous two terms together. Given the starting values
of _f(0) = 0_ and _f(1) = 1_ the first ten terms of the
sequence are:

> 0 1 1 2 3 5 8 13 21 34

We will notice however that some numbers are left out
of the sequence and don't get any of the fame, 9 is an
example. However, if we were to start the sequence with
a different value for _f(1)_ we will generate a new
sequence of numbers. Here is the series for _f(1) = 3_
:

> 0 3 3 6 **9** 15 24 39 102 165

We now have a sequence that contains the number 9. What
joy!  
Today you will write a program that will find the
lowest positive integer for _f(1)_ that will generate a
Fibonacci-ish sequence containing the desired integer
(let 's call it _x_ ).

# Input description

Your input will be a single positive integer _x_.

Sample Input 1: 21

Sample Input 2: 84

# Output description

The sequence of integers generated using the recursion
relation starting from 0 and ending at the desired
integer _x_ with the lowest value of _f(1)_.

Sample Output 1: 0 1 1 2 3 5 8 13 21

Sample Output 2: 0 4 4 8 12 20 32 52 84

# Challenge Inputs

Input 1: 0  
Input 2: 578  
Input 3: 123456789

# Notes/Hints

Large inputs (such as input 3) may take some time given
your implementation. However, there is a relationship
between sequences generated using _f(1) > 1_ and the
classic sequence that can be exploited.

# Bonus

Make your program run as fast as possible.

# Credit

This challenge was suggsted by
[/u/nmacholl](/u/nmacholl). Have a good challenge idea?
Consider submitting it to
[/r/dailyprogrammer_ideas](/r/dailyprogrammer_ideas)
and we might use it

