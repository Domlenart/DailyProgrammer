https://www.reddit.com/r/dailyprogrammer/comments/4uhqdb/20160725_challenge_277_easy_simplifying_fractions/
# Description

A fraction exists of a numerator (top part) and a
denominator (bottom part) as you probably all know.

Simplifying (or reducing) fractions means to make the
fraction as simple as possible. Meaning that the
denominator is a close to `1` as possible. This can be
done by dividing the numerator and denominator by their
greatest common divisor.

# Formal Inputs & Outputs

## Input description

You will be given a list with 2 numbers seperator by a
space. The first is the numerator, the second the
denominator

[code]

    4 8
    1536 78360
    51478 5536
    46410 119340
    7673 4729
    4096 1024
    
[/code]

## Output description

The most simplified numbers

[code]

    1 2
    64 3265
    25739 2768
    7 18
    7673 4729
    4 1
    
[/code]

# Notes/Hints

Most languages have by default this kind of
functionality, but if you want to challenge yourself,
you should go back to the basic theory and implement it
yourself.

# Bonus

Instead of using numbers, we could also use letters.

For instance

[code]

    ab   a
    __ = _
    cb   c 
    
[/code]

And if you know that `x = cb`, then you would have
this:

[code]

    ab   a
    __ = _
    x    c  
    
[/code]

and offcourse:

[code]

    a    1
    __ = _
    a    1
    
    aa   a
    __ = _
    a    1
    
[/code]

The input will be first a number saying how many
equations there are. And after the equations, you have
the fractions.

The equations are a letter and a value seperated by a
space. An equation can have another equation in it.

[code]

    3
    x cb
    y ab
    z xa
    ab cb
    ab x
    x y
    z y
    z xay
    
[/code]

output:

[code]

    a c
    a c
    c a
    c 1
    1 ab
    
[/code]

# Finally

Have a good challenge idea?

Consider submitting it to
[/r/dailyprogrammer_ideas](/r/dailyprogrammer_ideas)

